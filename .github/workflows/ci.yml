name: CI - Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint --if-present
    
    - name: Run tests
      run: npm test
      env:
        CI: true
        TEST_ENV_VAR: test_value
        ADMIN_USER: test@example.com
        ADMIN_PASS: test_password
    
    - name: Run test coverage
      run: npm run test:coverage --if-present
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        files: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Test preprocessor functionality
      run: |
        node index.js preprocess --spec-dir examples/simple_specs --out-dir examples/test_output
        ls -la examples/test_output
      env:
        ADMIN_USER: ci_test@example.com
        ADMIN_PASS: ci_password
        API_URL: https://ci-api.example.com

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Check for vulnerabilities
      run: npm audit --production
      continue-on-error: true
